{"version":3,"sources":["reducers/usersReducer.js","constants/actionTypes.js","reducers/casesReducer.js","reducers/placesVisitedReducer.js","reducers/rootReducer.js","store/index.js","api/config.js","api/usersApi.js","components/common/NavigationBar.js","actions/userActions.js","components/common/FormButton.js","components/authentication/Register.js","components/authentication/Login.js","components/common/AuthCheck.js","components/authentication/ConfirmPhoneNumber.js","api/placesVisitedApi.js","components/modals/ViewTestedPositiveModal.js","components/modals/ViewSymptomsCaseModal.js","components/maps/GoogleMap.js","components/maps/PlaceSearchForm.js","api/casesApi.js","components/modals/ReportCaseModal.js","actions/casesActions.js","components/common/ReportSymptomsButton.js","components/maps/MapContainer.js","actions/placesVisitedActions.js","components/common/CovidFaqs.js","components/modals/DeleteCaseModal.js","components/modals/ReportPlaceVisitedModal.js","components/modals/DeletePlaceVisitedModal.js","components/common/PlaceVisitedCard.js","components/user/MyPlacesVisited.js","components/user/MyCase.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isLoggedIn","userInfo","usersReducer","state","action","type","payload","phone_number_confirmed","usersCase","casesReducer","console","log","placesOnMap","usersPlacesVisited","placesVisitedReducer","newUsersPlacesVisited","filter","place","id","rootReducer","combineReducers","user","cases","placesVisited","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadFromLocalStorage","store","createStore","compose","applyMiddleware","thunkMiddleWare","window","__REDUX_DEVTOOLS_EXTENSION__","f","subscribe","stringify","setItem","saveToLocalStorage","getState","apiURL","registerUser","registrationInfo","a","fetch","headers","method","credentials","body","response","json","parsedResponse","loginUser","loginInfo","confirmPhoneNumber","confirmationCode","requestBody","logoutUser","NavigationBar","handleLogoutClick","e","props","Navbar","bg","variant","Brand","href","Nav","className","Link","this","Fragment","NavDropdown","title","drop","Item","onClick","React","Component","connect","dispatch","usersAPI","status","code","FormButton","isLoading","Button","Spinner","as","animation","size","role","aria-hidden","text","Register","handleChange","setState","target","name","value","handleSubmit","preventDefault","formErrorMessages","message","first_name","last_name","phone_number","password","confirmed_password","phoneNumberConfirmed","to","Container","Row","Col","md","sm","Card","Body","Title","map","i","key","Form","onSubmit","Group","Label","Control","required","placeholder","onChange","data","Login","case","places_visited","length","AuthCheck","ConfirmPhoneNumber","join","fields","values","getPlacesOnMap","createUsersPlaceVisited","placeVisitedInfo","deleteUsersPlaceVisited","placeVisitedId","ViewTestedPositiveModal","caseInfo","dateVisited","Date","date_visited","symptomsDate","symptoms_date","Modal","show","showModal","onHide","hideModal","Header","closeButton","address","toDateString","age","notes","Footer","ViewSymptomsCaseModal","GoogleMap","showViewTestedPositiveCaseModal","testedPositiveCase","currentTestPositiveCase","viewTestedPositiveCaseModal","hideViewTestedPositiveCaseModal","showViewSymptomsCaseModal","currentSymptomsCase","viewSymptomsCaseModal","hideViewSymptomsCaseModal","mapsLatitude","mapsLocation","lat","mapsLongitude","lng","viewSymptomCaseModal","google","zoom","mapZoom","style","width","height","initialCenter","center","position","icon","url","scaledSize","maps","Size","has_tested","latitude","longitude","GoogleApiWrapper","apiKey","process","PlaceSearchForm","isSearching","getAutocompleteResults","googleApiResponse","searchPredictions","predictions","handleSearchPredictionClick","city","description","googlePlaceId","place_id","setMapsLocation","result","geometry","location","onBlur","isSearchingForPlace","getUsersCase","userId","createUsersCase","deleteUsersCase","ReportCaseModal","handleCheckBoxChange","checked","handleDateChange","date","zipCodeIsValid","zipCode","zip_code","split","forEach","digit","isNaN","parseInt","Check","label","rows","casesAPI","ReportSymptomsButton","userHasCase","MapContainer","setUsersLocation","navigator","geolocation","getCurrentPosition","coords","mapIsLoading","coordinates","placesVisitedAPI","CovidFaqs","Accordion","Toggle","eventKey","Collapse","DeleteCaseModal","handleDelete","ReportPlaceVisitedModal","handlePlaceChange","searchPlacePredictions","placeDescription","getPlacesLocation","placesLocation","placesName","google_place_id","clearState","DeletePlaceVisitedModal","placeVisited","PlaceVisitedCard","deleteButtonOnClick","MyPlacesVisited","showReportPlaceVisitedModal","hideReportPlaceVisitedModal","showDeletePlaceVisitedModal","placeVisitedToDelete","hideDeletePlaceVisitedModal","MyCase","showReportCaseModal","hideReportCaseModal","showDeleteCaseModal","hideDeleteCaseModal","App","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.adee0541.chunk.js","sourcesContent":["import { \n    LOGIN_USER, \n    LOGOUT_USER, \n    CONFIRM_PHONE_NUMBER\n} from '../constants/actionTypes.js';\n\n\nconst initialState = {\n    isLoggedIn: false,\n    userInfo: {},\n}\n\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        \n        case LOGIN_USER: \n            return {\n                ...state,\n                isLoggedIn: true,\n                userInfo: action.payload   \n            }\n\n        case CONFIRM_PHONE_NUMBER:\n            return {\n                ...state,\n                userInfo: {\n                    ...state.userInfo,\n                    phone_number_confirmed: true\n                }\n            }\n\n        case LOGOUT_USER:\n            return {\n                ...state,\n                isLoggedIn: false,\n                userInfo: {}\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport default usersReducer;\n\n","\n// users\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const CONFIRM_PHONE_NUMBER = 'CONFIRM_PHONE_NUMBER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\n// cases\nexport const SET_USERS_CASE = 'SET_USERS_CASE';\nexport const DELETE_USERS_CASE = 'DELETE_USERS_CASE';\n\n// places visited \nexport const SET_PLACES_ON_MAP = 'SET_PLACES_ON_MAP';\nexport const SET_USERS_PLACES_VISITED = 'SET_USERS_PLACES_VISITED';\nexport const ADD_USERS_PLACE_VISITED = 'ADD_USERS_PLACE_VISITED';\nexport const DELETE_USERS_PLACE_VISITED = 'DELETE_USERS_PLACE_VISITED';\nexport const DELETE_ALL_USERS_PLACES_VISITED = 'DELETE_ALL_USERS_PLACES_VISITED';\n\n\n\n\n","import {\n    SET_USERS_CASE,\n    DELETE_USERS_CASE\n} from '../constants/actionTypes.js';\n\n\nconst initialState = {\n    usersCase: {}\n}\n\n\nconst casesReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n        \n        case SET_USERS_CASE:\n            console.log('SET_USERS_CASE');\n            console.log('payload:', action.payload);\n            \n            return {\n                ...state,\n                usersCase: {...action.payload}\n            }\n\n        case DELETE_USERS_CASE:\n            return {\n                ...state,\n                usersCase: {}\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport default casesReducer;\n","import {\n    SET_PLACES_ON_MAP,\n    SET_USERS_PLACES_VISITED,\n    ADD_USERS_PLACE_VISITED,\n    DELETE_USERS_PLACE_VISITED,\n    DELETE_ALL_USERS_PLACES_VISITED\n} from '../constants/actionTypes.js';\n\n\nconst initialState = {\n    placesOnMap: [], \n    usersPlacesVisited: []\n}\n\n\nconst placesVisitedReducer = (state = initialState, action) => {\n\n    switch(action.type) {\n\n        // sets all of the places that should be shown on the map\n        case SET_PLACES_ON_MAP:\n            console.log('SET_PLACES_ON_MAP')\n            console.log('payload:', action.payload);\n            return {\n                ...state,\n                placesOnMap: action.payload\n            }\n\n        // sets all to places the user has visited since testing positive or \n        // showing symptoms of covid-19\n        case SET_USERS_PLACES_VISITED:\n            return {\n                ...state,\n                usersPlacesVisited: action.payload\n            }\n\n        // adds a new place visited to the places the user has visited\n        case ADD_USERS_PLACE_VISITED:\n            return {\n                ...state,\n                usersPlacesVisited: [...state.usersPlacesVisited, action.payload]\n            }\n\n        // deletes a place the user visited\n        case DELETE_USERS_PLACE_VISITED:\n            \n            // creates a new array with the place visited that was deleted removed\n            const newUsersPlacesVisited = state.usersPlacesVisited.filter((place) => {\n                return place.id !== action.payload;\n            });\n\n            return {\n                ...state,\n                usersPlacesVisited: newUsersPlacesVisited\n            }\n\n        // deletes all of the places the user has visited \n        // this case is performed when the user deletes their case\n        case DELETE_ALL_USERS_PLACES_VISITED:\n            return {\n                ...state, \n                usersPlacesVisited: []\n            }\n            \n\n        default: \n            return state\n    }\n}\n\n\nexport default placesVisitedReducer;\n\n\n","import { combineReducers } from 'redux';\n\nimport usersReducer from './usersReducer.js';\nimport casesReducer from './casesReducer.js';\nimport placesVisitedReducer from './placesVisitedReducer.js';\n\n\nconst rootReducer = combineReducers({\n    user: usersReducer,\n    cases: casesReducer,\n    placesVisited: placesVisitedReducer\n});\n\n\nexport default rootReducer;\n\n\n","import {\n    createStore,\n    applyMiddleware,\n    compose\n} from \"redux\";\nimport thunkMiddleWare from \"redux-thunk\";\nimport rootReducer from '../reducers/rootReducer.js';\n\n\n// saves the cache if a user reloads the page\nfunction saveToLocalStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(\"state\", serializedState);\n    } catch (err) {\n        console.log(\"err from saveToLocalStorage:\", err);\n    }\n}\n\n// loads the cache if the user exits site and comes back\nfunction loadFromLocalStorage() {\n    try {\n        const serializedState = localStorage.getItem(\"state\");\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        console.log(\"err from loadFromLocalStorage:\", err);\n        return undefined;\n    }\n}\n\n// this will be called when the site first loads\nconst persistedState = loadFromLocalStorage();\n\n// creates the redux store\nconst store = createStore(\n    rootReducer,\n    persistedState,\n    compose(\n        applyMiddleware(thunkMiddleWare),\n        window.__REDUX_DEVTOOLS_EXTENSION__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION__() :\n        function (f) {\n            return f;\n        }\n    )\n)\n\n// this saves the state after the redux store changes\nstore.subscribe(() => {\n    const state = store.getState();\n    saveToLocalStorage(state);\n  });\n\n\nexport default store;","\nconst apiURL = 'http://localhost:8000/api/v1/'; \n\nexport default apiURL;\n\n","import apiURL from './config.js';\n\n\nexport default {\n\n    // makes a request to register a new user\n    registerUser: async (registrationInfo) => {\n        try {\n            const response = await fetch(apiURL + 'users/register', {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(registrationInfo),\n            });\n            const parsedResponse = await response.json();\n            return parsedResponse;        \n\n        } catch (error) {\n            // TODO - handle this error\n            console.log('error occurred during registration:', error);\n        }\n    },\n\n    // makes api request to login a user \n    loginUser: async (loginInfo) => {\n        try {\n            const response = await fetch(apiURL + 'users/login', {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(loginInfo),\n            });\n            const parsedResponse = await response.json();\n            return parsedResponse;        \n\n        } catch (error) {\n            // TODO - handle this error\n            console.log('error occurred during login:', error);\n        }\n    },\n\n    confirmPhoneNumber: async (confirmationCode) => {\n        const requestBody = {\n            'confirmation_code': confirmationCode\n        }\n\n        try {\n            const response = await fetch(apiURL + 'users/confirm-number', {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'PUT',\n                credentials: 'include',\n                body: JSON.stringify(requestBody),\n            });\n            const parsedResponse = await response.json(requestBody);\n            return parsedResponse;        \n\n        } catch (error) {\n            // TODO - handle this error\n            console.log('error occurred during login:', error);\n        }\n    },\n\n    // makes a request to logout a user\n    logoutUser: async () => {\n        try {\n            const response = await fetch(apiURL + 'users/logout', {\n                method: 'POST',\n                credentials: 'include'\n            });\n            const parsedResponse = await response.json();\n            return parsedResponse;\n\n        } catch (error) {\n            // TODO - handle this error\n            console.log('error occurred while logging out:', error);\n        }\n    }\n}","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/userActions.js'\n\n// components\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\n\nclass NavigationBar extends React.Component {\n\n  handleLogoutClick = async (e) => {\n    await this.props.logoutUser();\n  }\n\n  render() {\n    return (\n      <Navbar\n        id=\"navbar\"\n        bg=\"dark\" \n        variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/map\">Map</Nav.Link>\n        </Nav>\n        <Nav>\n        {\n          this.props.isLoggedIn ? (\n            <React.Fragment>\n              <NavDropdown \n                title=\"Account\"\n                id=\"basic-nav-dropdown\"\n                drop=\"\">\n                <NavDropdown.Item href=\"/my-case\">\n                  My Case\n                </NavDropdown.Item>\n                <NavDropdown.Item onClick={ this.handleLogoutClick }>\n                  Logout\n                </NavDropdown.Item>\n              </NavDropdown>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n              <Nav.Link href=\"/register\">Register</Nav.Link>\n            </React.Fragment>\n          )}\n        </Nav>\n\n      </Navbar>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn\n  }\n}\n\nexport default connect(mapStateToProps, { logoutUser })(NavigationBar);","import { \n    LOGIN_USER,\n    SET_USERS_CASE,\n    SET_USERS_PLACES_VISITED,\n    DELETE_USERS_CASE,\n    DELETE_ALL_USERS_PLACES_VISITED,\n    LOGOUT_USER,\n    CONFIRM_PHONE_NUMBER,\n} from '../constants/actionTypes.js';\n\nimport usersAPI from '../api/usersApi.js';\n\n\nexport const registerUser = (registrationInfo) => async (dispatch) => {\n    const response = await usersAPI.registerUser(registrationInfo);\n\n    // if the new user was registered then the user is logged in\n    if (response.status.code === 201) {\n        dispatch({\n            type: LOGIN_USER,\n            payload: response.data\n        });\n    }\n\n    return response;\n}\n\n\nexport const loginUser = (loginInfo) => async (dispatch) => {\n    const response = await usersAPI.loginUser(loginInfo);\n\n    if (response.status.code === 200) {\n        \n        // if the user has created a case, it is set in the store \n        if (response.data.case) {\n            dispatch({\n                type: SET_USERS_CASE,\n                payload: response.data.case\n            });\n\n            // if the user has created places they have visited it is set in the store \n            if (response.data.case.places_visited.length > 0) {\n                dispatch({\n                    type: SET_USERS_PLACES_VISITED,\n                    payload: response.data.case.places_visited\n                });\n            } \n        }\n\n        dispatch({\n            type: LOGIN_USER,\n            payload: response.data\n        });\n    }\n\n    return response;\n}\n\n\nexport const confirmPhoneNumber = (confirmationCode) => async (dispatch) => {\n    const response = await usersAPI.confirmPhoneNumber(confirmationCode);\n\n    if (response.status.code === 204) {\n        dispatch({\n            type: CONFIRM_PHONE_NUMBER,\n            payload: {}\n        });\n    }\n\n    return response;\n}\n\n\nexport const logoutUser = () => async (dispatch) => {\n    const response = await usersAPI.logoutUser();\n\n    if (response.status.code === 200) {\n        dispatch({\n            type: LOGOUT_USER,\n            payload: {}\n        });\n\n        // deletes the users case from the store\n        dispatch({\n            type: DELETE_USERS_CASE,\n            payload: {} \n        });\n\n        // removes the user places visited from the store\n        dispatch({\n            type: DELETE_ALL_USERS_PLACES_VISITED,\n            payload: {}\n        });\n\n    }\n}\n\n\n","import React from 'react';\n\nimport { Button, Spinner } from 'react-bootstrap';\n\n\nclass FormButton extends React.Component {\n\n  render() {\n\n    // shows no loading icon on the button\n    if (!this.props.isLoading) {\n      return (\n        <Button variant={ this.props.variant } type=\"submit\">\n          { this.props.text }\n        </Button>\n      )\n    \n    // shows a loading icon on the button\n    } else {\n      return (\n        <Button variant={ this.props.variant }>\n          <Spinner\n            as=\"span\"\n            animation=\"grow\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n            />\n          <span className=\"ml-2\">Loading</span>\n        </Button>\n      )\n    }\n  }\n}\n\n\nexport default FormButton;\n\n\n","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/userActions.js';\n\n// components\nimport { Container, Row, Col, Card, Form } from 'react-bootstrap';\nimport FormButton from '../common/FormButton.js';\nimport { Link, Redirect } from 'react-router-dom';\n\n\nclass Register extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      phone_number: '',\n      password: '',\n      confirmed_password: '',\n      isLoading: false,\n      formErrorMessages: []\n    }\n  }\n\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    this.setState({ \n\t\t\tformErrorMessages: [],\n\t\t\tisLoading: true \n\t\t});\n\n    // makes api call to register the user\n    const response = await this.props.registerUser(this.state);\n\n    // if the server encountered an error the message is displayed to the client\n    if (response.status.code === 404) {\n      this.setState({\n        formErrorMessages: [...this.state.formErrorMessages, response.status.message]\n      });\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n\n    // if the user is logged in and they have not confirmed their phone number\n    if (this.props.isLoggedIn && !this.props.phoneNumberConfirmed) {\n      return (\n        <Redirect to=\"/confirm-number\" />\n      )\n    \n    // if the user is logged in and they have already confirmed their phone number\n    } else if (this.props.isLoggedIn && this.props.phoneNumberConfirmed) {\n      return (\n        <Redirect to=\"/map\" />\n      )\n    }\n\n    return (\n      <Container>\n        <Row className=\"py-4\">\n          <Col></Col>\n\n          <Col md={ 8 } sm={ 12 }>\n            <Card>\n              <Card.Body>\n                <Card.Title>Register</Card.Title>\n\n                {/* form error messages */}\n                {this.state.formErrorMessages.map((message, i) => {\n                      return (\n                        <div key={ i }>\n\t\t\t\t\t\t\t\t\t\t      <small className=\"text-danger\">{ message }</small>\n\t\t\t\t\t\t\t\t\t      </div>\n                      )\n                  })}\n\n                <Form \n                  className=\"py-3\"\n                  onSubmit={ this.handleSubmit }> \n\n                  <Row>\n                    <Col md={ 6 } sm={ 12 }>\n                      <Form.Group>\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control \n                          required \n                          type=\"text\"\n                          placeholder=\"First Name\" \n                          name=\"first_name\"\n                          value={ this.state.first_name }\n\t\t\t\t\t\t\t\t\t\t\t\t  onChange={ this.handleChange } \n                          />\n                      </Form.Group>\n                    </Col>\n                    <Col md={ 6 } sm={ 12 }>\n                      <Form.Group>\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control \n                          required \n                          type=\"text\"\n                          placeholder=\"Last Name\" \n                          name=\"last_name\"\n                          value={ this.state.last_name }\n\t\t\t\t\t\t\t\t\t\t\t\t  onChange={ this.handleChange } \n                          />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Form.Group>\n                    <Form.Label>Phone Number</Form.Label>\n                    <Form.Control \n                      required \n                      type=\"text\"\n                      placeholder=\"Phone Number\" \n                      name=\"phone_number\"\n                      value={ this.state.phone_number }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ this.handleChange } \n                      />\n                  </Form.Group>\n\n                  <Row>\n                    <Col md={ 6 } sm={ 12 }>\n                      <Form.Group>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                          required \n                          type=\"password\"\n                          placeholder=\"Password\" \n                          name=\"password\"\n                          value={ this.state.password }\n\t\t\t\t\t\t\t\t\t\t\t\t  onChange={ this.handleChange } \n                          />\n                      </Form.Group>\n                    </Col>\n                    <Col md={ 6 } sm={ 12 }>\n                      <Form.Group>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control \n                          required \n                          type=\"password\"\n                          placeholder=\"Confirm Password\" \n                          name=\"confirmed_password\"\n                          value={ this.state.confirmed_password }\n\t\t\t\t\t\t\t\t\t\t\t\t  onChange={ this.handleChange } \n                          />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <FormButton \n                    variant=\"dark\"\n                    text=\"Register\"\n                    isLoading={ this.state.isLoading } \n                    />\n                </Form>\n                <small>\n                  Already have an account? <Link to=\"/login\">Login Here</Link>\n                </small> \n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col></Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n    isLoggedIn: state.user.isLoggedIn,\n    phoneNumberConfirmed: state.user.userInfo.phone_number_confirmed || false\n\t}\n}\n\nexport default connect(mapStateToProps, { registerUser })(Register);\n\n\n\n","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/userActions.js';\n\n// components\nimport { Container, Row, Col, Card, Form } from 'react-bootstrap';\nimport FormButton from '../common/FormButton.js';\nimport { Link, Redirect } from 'react-router-dom';\n\n\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phone_number: '',\n\t\t\tpassword: '',\n\t\t\tisLoading: false,\n\t\t\tformErrorMessages: []\n    }\n\t}\n\t\n\thandleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n\t}\n\t\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tthis.setState({ \n\t\t\tformErrorMessages: [],\n\t\t\tisLoading: true \n\t\t});\n\n\t\tconst response = await this.props.loginUser(this.state);\n\n    // if the server encountered an error the message is displayed to the client\n    if (response.status.code === 404) {\n      this.setState({\n        formErrorMessages: [...this.state.formErrorMessages, response.status.message]\n      });\n    }\n\n    this.setState({ isLoading: false });\n\t}\n\n  render() {\n\n\t\t// if the user is logged in and they have not confirmed their phone number\n    if (this.props.isLoggedIn && !this.props.phoneNumberConfirmed) {\n      return (\n        <Redirect to=\"/confirm-number\" />\n      )\n    \n    // if the user is logged in and they have already confirmed their phone number\n    } else if (this.props.isLoggedIn && this.props.phoneNumberConfirmed) {\n      return (\n        <Redirect to=\"/map\" />\n      )\n    }\n\n    return (\n      <Container>\n        <Row className=\"py-4\">\n          <Col></Col>\n\n          <Col md={ 8 } sm={ 12 }>\n            <Card>\n\t\t\t\t\t\t\t<Card.Body>\n              \t<Card.Title>Login</Card.Title>\n\n\t\t\t\t\t\t\t\t{/* form error messages */}\n\t\t\t\t\t\t\t\t{this.state.formErrorMessages.map((message, i) => {\n                      return (\n                        <div key={ i }>\n\t\t\t\t\t\t\t\t\t\t      <small className=\"text-danger\">{ message }</small>\n\t\t\t\t\t\t\t\t\t      </div>\n                      )\n                  })}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Form \n\t\t\t\t\t\t\t\t\tclassName=\"py-3\"\n                  onSubmit={ this.handleSubmit } >\n\n\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Phone Number</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Form.Control \n                      required \n                      type=\"text\"\n                      placeholder=\"Phone Number\" \n                      name=\"phone_number\"\n                      value={ this.state.phone_number }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ this.handleChange } \n                      />\n\t\t\t\t\t\t\t\t\t</Form.Group>\t\n\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n                    <Form.Control \n                      required \n                      type=\"password\"\n                      placeholder=\"Password\" \n                      name=\"password\"\n                      value={ this.state.password }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ this.handleChange } \n                      />\t\t\n\t\t\t\t\t\t\t\t\t</Form.Group>\t\n\n\t\t\t\t\t\t\t\t\t<FormButton \n                    variant=\"dark\"\n                    text=\"Login\"\n                    isLoading={ this.state.isLoading } \n                    />\t\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t<small>\n                  Don't have an account? <Link to=\"/register\">Register Here</Link>\n                </small> \n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col></Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n    )\n\t}\n\t\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n\t\tisLoggedIn: state.user.isLoggedIn,\n\t\tphoneNumberConfirmed: state.user.userInfo.phone_number_confirmed || false\n  }\n}\n\nexport default connect(mapStateToProps, { loginUser })(Login); \n\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\n/* \nThis component takes in two props, isLoggedIn and phoneNumberConfirmed, and redirects \nthe user if they are not logged in or if they have not confirmed their phone number yet\n*/\n\n\nfunction AuthCheck(props) {\n\n    // if the user is not logged in\n    if (!props.isLoggedIn) {\n        return (\n            <Redirect to=\"/login\" />\n        )\n\n    // if the user is logged in by has not confirmed their phone number\n    } else if (props.isLoggedIn && !props.phoneNumberConfirmed) {\n        return (\n            <Redirect to=\"/confirm-number\" />    \n        )\n    \n    // if the user is logged in and their phone number is confirmed        \n    } else if (props.isLoggedIn && props.phoneNumberConfirmed) {    \n        return (\n            null\n        )\n    }\n} \n\n\nexport default AuthCheck;\n","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\nimport { confirmPhoneNumber } from '../../actions/userActions.js'\n\n// components\nimport AuthCheck from '../common/AuthCheck.js';\nimport { Container, Row, Col, Card, Form } from 'react-bootstrap';\nimport ReactCodeInput from 'react-verification-code-input';\nimport FormButton from '../common/FormButton.js';\nimport { Redirect } from 'react-router-dom';\n\n\nclass ConfirmPhoneNumber extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t\t\tconfirmationCode: [],\n\t\t\tisLoading: false,\n\t\t\tformErrorMessages: []\n    }\n\t}\n\n\thandleChange = (value) => {\n\t\tthis.setState({\n\t\t\tconfirmationCode: [...value]\n\t\t});\n\t}\n\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tthis.setState({\n\t\t\tformErrorMessages: [],\n\t\t\tisLoading: true\n\t\t});\n\n\t\tconst confirmationCode = this.state.confirmationCode.join('');\n\t\tconst response = await this.props.confirmPhoneNumber(confirmationCode);\n\t\t\n\t\tif (response.status.code === 404) {\n\n\t\t\t// shows incorrect code error to the client\n\t\t\tthis.setState({\n\t\t\t\tformErrorMessages: [...this.state.formErrorMessages, response.status.message]\n\t\t\t});\n\t\t}\t\t\n\n\t\tthis.setState({ isLoading: false });\n\t}\n\t\n\trender() {\n\n\t\t// if the users phone number is confirmed\n\t\tif (this.props.userInfo.phone_number_confirmed) {\n\t\t\treturn (\n\t\t\t\t<Redirect to=\"/map\" />\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<Container>\n\n\t\t\t<AuthCheck \n\t\t\t\tisLoggedIn={ this.props.isLoggedIn }\n\t\t\t\tphoneNumberConfirmed={ this.props.phoneNumberConfirmed } />\t\n\n\t\t\t\t<Row className=\"py-4\">\n\t\t\t\t\t<Col></Col>\n\n\t\t\t\t\t<Col md={ 6 } sm={ 12 }>\n\t\t\t\t\t\t<Card className=\"text-center px-4\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Card.Title>Confirm your phone number</Card.Title>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tThank you for signing up { this.props.userInfo.first_name }!\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tPlease enter the confirmation code we sent to: <br></br> \n\t\t\t\t\t\t\t\t\t<strong>{ this.props.userInfo.phone_number }</strong>\n\t\t\t\t\t\t\t\t</p>\t\n\n\t\t\t\t\t\t\t\t{/* form error messages */}\n                \t\t\t\t{this.state.formErrorMessages.map((message, i) => {\n                      \t\t\t\treturn (\n                        \t\t\t\t<div key={ i }>\n\t\t\t\t\t\t\t\t\t\t    <small className=\"text-danger\">{ message }</small>\n\t\t\t\t\t\t\t\t\t    </div>\n                      \t\t\t\t)\n                  \t\t\t\t})}\n\n\t\t\t\t\t\t\t\t<Form \n\t\t\t\t\t\t\t\t\tclassName=\"py-3\"\n\t\t\t\t\t\t\t\t\tonSubmit={ this.handleSubmit }>\n\n\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Enter Confirmation Code</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<ReactCodeInput \n\t\t\t\t\t\t\t\t\t\t\tclassName=\"d-inline-block\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tfields={ 5 } \n\t\t\t\t\t\t\t\t\t\t\tvalues={ this.state.confirmationCode }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ (value) => this.handleChange(value) } />\n\t\t\t\t\t\t\t\t\t</Form.Group>\t\n\n\t\t\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\t\t\tclassName=\"d-inline-block\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\t\t\t\ttext=\"Confirm\"\n\t\t\t\t\t\t\t\t\t\tisLoading={ this.state.isLoading } />\n\t\t\t\t\t\t\t\t</Form>\n\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col></Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisLoggedIn: state.user.isLoggedIn,\n\t\tuserInfo: state.user.userInfo\n\t}\n}\n\nexport default connect(mapStateToProps, { confirmPhoneNumber })(ConfirmPhoneNumber);\n","import apiURL from './config.js';\n\n\nexport default {\n\n    // call the api to get all of the places to display on the map\n    getPlacesOnMap: async () => {\n        try {\n            const response = await fetch(apiURL + 'places-visited/');\n            const parsedResponse = await response.json();\n            return parsedResponse;   \n\n        } catch (error) {\n            console.log('error occured getting places on the map:', error);\n        }\n    },\n\n    // makes api call for the user to create a new place they have visited \n    createUsersPlaceVisited: async (placeVisitedInfo) => {\n        try {\n            const response = await fetch(apiURL + 'places-visited/', {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(placeVisitedInfo),\n            });\n            const parsedResponse = await response.json();\n            return parsedResponse;   \n\n        } catch (error) {\n            console.log('error occured while creating place visited:', error);\n        }\n    },\n\n    // makes an api call for the user to delete a place they have visited\n    deleteUsersPlaceVisited: async (placeVisitedId) => {\n        try {\n            const response = await fetch(apiURL + 'places-visited/' + placeVisitedId, {\n                method: 'DELETE',\n                credentials: 'include'\n            });\n            const parsedResponse = await response.json();\n            return parsedResponse; \n            \n        } catch (error) {\n            console.log('error occured while deleting place visited:', error);\n        }\n    }\n\n}","import React from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\n\n\nclass ViewTestedPositiveModal extends React.Component {\n\n  constructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.getPlacesId();\n\t}\n\n\t// makes a request to the google geocode api to get the places id of the place visited\n\t// then the place id is used to get more information on the place visited\n\t// getPlacesId= () => {\n\t// \tfetch(\n\t// \t\t'https://maps.googleapis.com/maps/api/geocode/json?address=' +\n\t// \t\tthis.props.caseInfo.address + \n\t// \t\t'&key=' + process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n\t// \t\t)\n\t// \t\t.then((response) => {\n\t// \t\t\tconst parsedResponse = response.json();\n\t// \t\t\treturn parsedResponse;\n\t// \t\t})\n\t// \t\t.then((parsedResponse) => {\n\t// \t\t\tconsole.log('response:', parsedResponse);\n\t// \t\t\t// const placeId = parsedResponse.results[0].place_id;\n\t// \t\t\t// this.getPlacesInformation(placeId);\n\t// \t\t});\n\t// }\n\n\t// makes a request to the google places api with the places id passed into the parameters\n\t// getPlacesInformation = (placeId) => {\n\t// \tfetch('http://localhost:8000/api/v1/places-visited/' + placeId + '/details')\n\t// \t.then((response) => {\n\t// \t\tconst parsedResponse = response.json();\n\t// \t\tconsole.log('place details response:', parsedResponse);\n\t// \t\treturn parsedResponse;\n\t// \t})\n\t// \t.then((parsedResponse) => {\n\t// \t\tconsole.log('places api response:', parsedResponse);\n\t// \t});\n\t// }\n\t\n\t\n\trender() {\n\t\tconst { caseInfo } = this.props;\n\n\t\tconst dateVisited = new Date(caseInfo.date_visited);\n\t\tconst symptomsDate = new Date(caseInfo.case.symptoms_date);\n\n\t\treturn (\n\t\t\t<Modal \n\t\t\t\tshow={ this.props.showModal }\n\t\t\t\tonHide={ this.props.hideModal } >\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title>Tested Positive</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t<h5>Place Information</h5>\n\t\t\t\t\t\t<p className=\"mb-0\"><strong>Address:</strong> { caseInfo.address }</p>\n\t\t\t\t\t\t<p className=\"mb-0\"><strong>Date Visited:</strong> { dateVisited.toDateString() }</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<h5 className=\"mt-4\">Person Information</h5>\n\t\t\t\t\t\t<p className=\"mb-0\"><strong>Showing Symptoms On:</strong> { symptomsDate.toDateString() }</p>\n\t\t\t\t\t\t<p className=\"mb-0\"><strong>Age:</strong> { caseInfo.case.age }</p>\n\t\t\t\t\t\t{caseInfo.case.notes.length > 0 ? (\n\t\t\t\t\t\t\t<p><strong>Notes:</strong><br></br> { caseInfo.case.notes }</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tvariant=\"light\"\n\t\t\t\t\t\t\tonClick={ this.props.hideModal }>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n}\n\n\nexport default ViewTestedPositiveModal;\n\n","import React from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\n\n\nclass ViewSymptomsCaseModal extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\t\tconst { caseInfo } = this.props;\n\t\tconsole.log('case info:', caseInfo);\n\n\t\tconst dateVisited = new Date(caseInfo.date_visited);\n\t\tconst symptomsDate = new Date(caseInfo.case.symptoms_date);\n\n  \treturn (\n\t\t\t<Modal \n\t\t\t\tshow={ this.props.showModal }\n\t\t\t\tonHide={ this.props.hideModal } >\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title>Showing Symptoms Case</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t<h5>Place Information</h5>\n\t\t\t\t\t\t<p className=\"mb-0\"><strong>Address:</strong> { caseInfo.address }</p>\n\t\t\t\t\t\t<p className=\"mb-0\"><strong>Date Visited:</strong> { dateVisited.toDateString() }</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<h5 className=\"mt-4\">Person Information</h5>\n\t\t\t\t\t\t<p className=\"mb-0\"><strong>Showing Symptoms On:</strong> { symptomsDate.toDateString() }</p>\n\t\t\t\t\t\t<p className=\"mb-0\"><strong>Age:</strong> { caseInfo.case.age }</p>\n\t\t\t\t\t\t{caseInfo.case.notes.length > 0 ? (\n\t\t\t\t\t\t\t<p><strong>Notes:</strong><br></br> { caseInfo.case.notes }</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tvariant=\"light\"\n\t\t\t\t\t\t\tonClick={ this.props.hideModal }>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n  }\n\n}\n\n\nexport default ViewSymptomsCaseModal;\n","import React from 'react';\n\n// components\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport ViewTestedPositiveModal from '../modals/ViewTestedPositiveModal.js';\nimport ViewSymptomsCaseModal from '../modals/ViewSymptomsCaseModal.js';\n\n\nclass GoogleMap extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmapsLatitude: this.props.mapsLocation.lat,\n\t\t\tmapsLongitude: this.props.mapsLocation.lng,\n\t\t\tviewSymptomCaseModal: false,\n\t\t\tviewTestedPositiveCaseModal: false,\n\n\t\t\t// case that will be shown in the ViewTestedPositiveModal\n\t\t\tcurrentTestPositiveCase: {}, \n\n\t\t\t// case the will shown in the ViewSymptomsCaseModal\n\t\t\tcurrentSymptomsCase: {}\n\t\t}\n\t}\n\n\tshowViewTestedPositiveCaseModal = (testedPositiveCase) => {\n\t\tthis.setState({ \n\t\t\tcurrentTestPositiveCase: testedPositiveCase,\n\t\t\tviewTestedPositiveCaseModal: true \n\t\t})\n\t}\n\n\thideViewTestedPositiveCaseModal = () => {\n\t\tthis.setState({ viewTestedPositiveCaseModal: false })\n\t}\n\n\tshowViewSymptomsCaseModal = (testedPositiveCase) => {\n\t\tthis.setState({ \n\t\t\tcurrentSymptomsCase: testedPositiveCase,\n\t\t\tviewSymptomsCaseModal: true \n\t\t})\n\t}\n\n\thideViewSymptomsCaseModal = () => {\n\t\tthis.setState({ viewSymptomsCaseModal: false })\n\t}\n\n  render() {\n\t\tconsole.log('maps location:', this.props.mapsLocation);\n\n\t\tconst mapStyles = {\n\t\t\twidth: '100%',\n\t\t\theight: '80%',\n\t\t}\n\n    return (\n\t\t\t<React.Fragment>\n\t\n\t\t\t{/* modal for viewing a place where a person who has been tested positive has visited */}\n\t\t\t{this.state.viewTestedPositiveCaseModal ? (\n\t\t\t\t<ViewTestedPositiveModal\n\t\t\t\t\tshowModal={ this.state.viewTestedPositiveCaseModal }\n\t\t\t\t\thideModal={ this.hideViewTestedPositiveCaseModal }\n\t\t\t\t\tcaseInfo={ this.state.currentTestPositiveCase } />\n\t\t\t) : (\n\t\t\t\tnull\n\t\t\t)}\t\n\n\t\t\t{/* modal for viewing a place where a person who has been showing symptoms has visited\t */}\n\t\t\t{this.state.viewSymptomCaseModal ? (\n\t\t\t\t<ViewSymptomsCaseModal \n\t\t\t\t\tshowModal={ this.state.viewSymptomCaseModal }\n\t\t\t\t\thideModal={ this.hideViewSymptomsCaseModal }\n\t\t\t\t\tcaseInfo={ this.state.currentSymptomsCase } />\n\t\t\t) : (\n\t\t\t\tnull\n\t\t\t)}\n\n    \t<Map\n      \tgoogle={ this.props.google }\n\t\t\t\tzoom={ this.props.mapZoom }\n\t\t\t\tstyle={ mapStyles }\n\t\t\t\tinitialCenter={\n\t\t\t\t\t{ lat: this.props.mapsLocation.lat, lng: this.props.mapsLocation.lng }\n\t\t\t\t}\n\t\t\t\tcenter={ \n\t\t\t\t\t{ lat: this.props.mapsLocation.lat, lng: this.props.mapsLocation.lng }\n\t\t\t\t}\n\t\t\t\t>\n\n\t\t\t\t{/* users location marker */}\n\t\t\t\t<Marker \n\t\t\t\t\ttitle={ \"Current Location\" }\n\t\t\t\t\tposition={\n\t\t\t\t\t\t{lat: this.state.mapsLatitude, lng: this.state.mapsLongitude}\n\t\t\t\t\t}\n\t\t\t\t\ticon={{\n      \t\t\turl: \"user-map-marker.svg\",\n      \t\t\tscaledSize: new this.props.google.maps.Size(20,20)\n    \t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{/* places where people with symptoms have visited\t */}\n\t\t\t\t{this.props.placesOnMap.map((place, i) => {\n\t\t\t\t\t\n\t\t\t\t\t// if the person that visited this place has tested positive\n\t\t\t\t\tif (place.case.has_tested) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Marker \n\t\t\t\t\t\t\t\tkey={ i }\n\t\t\t\t\t\t\t\ttitle={ \"Has Tested Positive Case\" }\n\t\t\t\t\t\t\t\tposition={\n\t\t\t\t\t\t\t\t\t{lat: place.latitude, lng: place.longitude}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ticon={{\n      \t\t\t\t\t\turl: \"tested-positive-map-marker.svg\",\n      \t\t\t\t\t\tscaledSize: new this.props.google.maps.Size(15, 15)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={ () => this.showViewTestedPositiveCaseModal(place) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\n\t\t\t\t\t// if the person that visited this place has only been experiencing symtoms\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Marker \n\t\t\t\t\t\t\t\tkey={ i }\n\t\t\t\t\t\t\t\ttitle={ \"Sympton Case\" }\n\t\t\t\t\t\t\t\tposition={\n\t\t\t\t\t\t\t\t\t{lat: place.latitude, lng: place.longitude}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ticon={{\n      \t\t\t\t\t\turl: \"symptoms-map-marker.svg\",\n      \t\t\t\t\t\tscaledSize: new this.props.google.maps.Size(15, 15)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={ () => this.showViewSymptomsCaseModal(place) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t}\t\t\n\t\t\t</Map>\n\n\t\t\t</React.Fragment>\n    )\n\t}\n}\n\nexport default GoogleApiWrapper({\n\tapiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n})(GoogleMap);\n\n\n","import React from 'react';\n\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { MDBInput, MDBListGroup, MDBListGroupItem } from \"mdbreact\"\n\n\nclass PlaceSearchForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t\t\tplace: '',\n\t\t\tsearchPredictions: [],\n\t\t\tisSearching: false,\n\t\t\tisLoading: false\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ place: e.target.value });\n\n\t\tif (this.state.place.length < 3) {\n\t\t\tthis.setState({ isSearching: false })\n\t\t} else {\n\t\t\tthis.setState({ isSearching: true })\n\t\t}\n\n\t\tthis.getAutocompleteResults();\n\t}\n\n\n\t// get the place autocomplete search results from the google places api\n\tgetAutocompleteResults = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:8000/api/v1/maps/autocomplete/places?search_input=' + this.state.place\n\t\t\t);\n\t\t\tconst parsedResponse = await response.json();\n\t\t\tconst googleApiResponse = parsedResponse.data;\n\n\t\t\tif (googleApiResponse.status === 'OK') {\n\t\t\t\tthis.setState({ searchPredictions: googleApiResponse.predictions });\n\t\t\t} \n\n\t\t}\tcatch (error) {\n\t\t\t// TODO - handle this error\n\t\t\tconsole.log('error occurred while searching for places:', error);\n\t\t}\n\t}\n\n\t// when a place from the search results drop down is clicked\n\thandleSearchPredictionClick = async (city) => {\n\t\tthis.setState({\n\t\t\tplace: city.description,\n\t\t\tisSearching: false\n\t\t})\n\n\t\t// makes request to get the latitude and longitude of the place\n\t\tconst googlePlaceId = city.place_id;\n\t\tconst response = await fetch(\n\t\t\t'http://localhost:8000/api/v1/maps/places/location?google_place_id=' + googlePlaceId\n\t\t);\n\t\tconst parsedResponse = await response.json()\n\n\t\t// changes the position of the map to whatever city was searched\n\t\tthis.props.setMapsLocation(parsedResponse.data.result.geometry.location)\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Form>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={ 8 } sm={ 12 }>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName=\"mb-0 pb-0\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Start typing...\"\n\t\t\t\t\t\t\t\tname=\"place\"\n\t\t\t\t\t\t\t\tvalue={ this.state.place }\n\t\t\t\t\t\t\t\tonChange={ this.handleChange }\n\t\t\t\t\t\t\t\tonBlur={ () => this.setState({ isSearchingForPlace: false }) } />\n\n\t\t\t\t\t\t\t{/* show the dropdown box to get places autocomplete predictions if the user \n\t\t\t\t\t\t\t\t\tis current searching */}\n\t\t\t\t\t\t\t{this.state.isSearching ? (\n\t\t\t\t\t\t\t\t<MDBListGroup className=\"dropdown-search-box\">\n              \t{this.state.searchPredictions.map((place, i) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<MDBListGroupItem \n\t\t\t\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t\t\t\tclassName=\"dropdown-search-item\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => this.handleSearchPredictionClick(place) }>\n\t\t\t\t\t\t\t\t\t\t\t{ place.description }\n\t\t\t\t\t\t\t\t\t\t</MDBListGroupItem>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n            \t</MDBListGroup>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t)}\n\t\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col></Col>\n\t\t\t\t</Row>\n\t\t\t\t\t\n\t\t\t</Form>\n\t\t)\n\t}\n}\n\n\nexport default PlaceSearchForm;\n\n\n","import apiURL from './config.js';\n\n\nexport default {\n\n    // makes an api call to get a users case\n    getUsersCase: async (userId) => {\n        try {\n            const response = await fetch(apiURL + 'cases/' + userId, {\n                method: 'GET',\n                credentials: 'include',\n            });\n            const parsedResponse = await response.json();\n            return parsedResponse;        \n\n        } catch (error) {\n            // TODO - handle this error\n            console.log('error occurred while getting the user case:', error);\n        } \n    },  \n\n    // makes a request to create a users case\n    createUsersCase: async (caseInfo) => {\n        try {\n            const response = await fetch(apiURL + 'cases/', {\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify(caseInfo),\n            });\n            const parsedResponse = await response.json();\n            return parsedResponse;        \n\n        } catch (error) {\n            // TODO - handle this error\n            console.log('error occurred while creating the users case:', error);\n        }\n    },\n\n    // makes and api call to delete a users case\n    deleteUsersCase: async (userId) => {\n        try {\n            console.log('user id before request:', userId);\n            const response = await fetch(apiURL + 'cases/' + userId, {\n                method: 'DELETE',\n                credentials: 'include',\n            });\n            const parsedResponse = await response.json();\n            return parsedResponse;        \n\n        } catch (error) {\n            // TODO - handle this error\n            console.log('error occurred while creating the users case:', error);\n        }        \n    }\n\n} ","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\nimport { createUsersCase } from '../../actions/casesActions.js';\n\n// components\nimport { Modal, Form } from 'react-bootstrap';\nimport DatePicker from 'react-date-picker';\nimport FormButton from '../common/FormButton.js';\n\n\nclass ReportCaseModal extends React.Component {\n\n  constructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\thas_tested: false,\n\t\t\tsymptoms_date: new Date(),\n\t\t\tage: '',\n\t\t\tzip_code: '',\n\t\t\tnotes: '',\n\t\t\tisLoading: false,\n\t\t\tformErrorMessages: []\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleCheckBoxChange = (e) => {\n\t\tthis.setState({\n\t\t\thas_tested: e.target.checked\n\t\t});\n\t}\n\n\thandleDateChange = (date) => {\n\t\tthis.setState({\n\t\t\tsymptoms_date: date\n\t\t});\n\t}\n\t\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tawait this.setState({\n\t\t\tformErrorMessages: [],\n\t\t\tisLoading: true\n\t\t});\n\n\t\tif (this.zipCodeIsValid()) {\n\t\t\tconst response = await this.props.createUsersCase(this.state)\n\t\t\tthis.props.hideModal();\n\t\t}\n\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\tzipCodeIsValid = () => {\n\t\tconst zipCodeErrorMessage = 'Please provide a valid zip code';\n\t\tconst zipCode = this.state.zip_code;\n\n\t\t// if the zip code length is not 5 then its invalid\n\t\tif (zipCode.length !== 5) {\n\t\t\tthis.setState({\n\t\t\t\tformErrorMessages: [...this.state.formErrorMessages, zipCodeErrorMessage]\n\t\t\t});\n\t\t\treturn false\n\t\t}\n\t\t\n\t\tzipCode.split('').forEach((digit) => {\n\t\t\t// if the current digit is not a number then its invalid \n\t\t\tif (isNaN(parseInt(digit))) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tformErrorMessages: [...this.state.formErrorMessages, zipCodeErrorMessage]\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\t\n\t\t});\n\n\t\treturn true;\n\t}\n\n\trender() {\n    return (\n    \t<Modal show={ this.props.showModal } onHide={ this.props.hideModal }>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Report Covid-19</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\n\t\t\t\t\t{/* form error messages */}\n\t\t\t\t\t{this.state.formErrorMessages.map((message, i) => {\n          \treturn (\n            \t<div key={ i }>\n\t\t\t\t\t\t\t\t<small className=\"text-danger\">{ message }</small>\n\t\t\t\t\t\t\t</div>\n            )\n          })}\n\n\t\t\t\t\t<Form\n\t\t\t\t\t\tclassName=\"py-3 text-center\"\n\t\t\t\t\t\tonSubmit={ this.handleSubmit } >\n\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tlabel=\"Have you tested positive?\"\n\t\t\t\t\t\t\t\t\tname=\"has_tested\" \n\t\t\t\t\t\t\t\t\tchecked={ this.state.has_tested }\n\t\t\t\t\t\t\t\t\tonChange={ this.handleCheckBoxChange } />\t\t\n\t\t\t\t\t\t\t</Form.Group>\t\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Form.Label>Date you started showing symptoms:</Form.Label><br></br>\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.symptoms_date }\n\t\t\t\t\t\t\t\t\tonChange={ this.handleDateChange } />\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Form.Label>What is your age?</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tname=\"age\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Age\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.age }\n\t\t\t\t\t\t\t\t\tonChange={ this.handleChange } />\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Form.Label>What's your zip code?</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"zip_code\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Zip Code\"\n\t\t\t\t\t\t\t\t\tvalue={ this.state.zip_code }\n\t\t\t\t\t\t\t\t\tonChange={ this.handleChange } />\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Label>Extra information you would like to add</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\t\t\t\trows=\"3\"\n\t\t\t\t\t\t\t\t\t\tname=\"notes\"\n\t\t\t\t\t\t\t\t\t\tvalue={ this.state.notes }\n\t\t\t\t\t\t\t\t\t\tonChange={ this.handleChange } />\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<FormButton \n\t\t\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\t\ttext=\"Next\"\n\t\t\t\t\t\t\t  isLoading={ this.state.isLoading } />\n\t\t\t\t\t</Form>\n\n\t\t\t\t</Modal.Body>\n      </Modal>\n    )\n  }\n}\n\n\nexport default connect(null, { createUsersCase })(ReportCaseModal);\n\n\n\n\n\n\n\n","import {\n    SET_USERS_CASE,\n    DELETE_USERS_CASE,\n    DELETE_ALL_USERS_PLACES_VISITED\n} from '../constants/actionTypes.js';\n\nimport casesAPI from '../api/casesApi.js';\n\n\nexport const createUsersCase = (caseInfo) => async (dispatch) => {\n    const response = await casesAPI.createUsersCase(caseInfo);\n    console.log(response);\n\n    if (response.status.code === 201) {\n        dispatch({\n            type: SET_USERS_CASE,\n            payload: response.data\n        });\n    }\n    \n    return response;\n}\n\n\nexport const deleteUsersCase = (userId) => async (dispatch) => {\n    const response = await casesAPI.deleteUsersCase(userId);\n\n    if (response.status.code === 204) {\n        dispatch({\n            type: DELETE_USERS_CASE,\n            payload: {}\n        });\n\n        // all places the user has visited also gets deleted from the store\n        // because a user cannot visit places if they do not have a case\n        dispatch({\n            type: DELETE_ALL_USERS_PLACES_VISITED,\n            payload: {}\n        })\n\n    }\n    \n    return response;\n}\n","import React from 'react';\n\nimport { Button } from 'react-bootstrap';\n\n\nclass ReportSymptomsButton extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    // shows the button that allows them to report a case if the \n    // user does not already  have one reported\n    if (this.props.userHasCase) {\n      return (\n        null\n      )    \n\n    // doesnts show the button if the user already has a case reported \n    } else {\n      return (\n        <Button\n\t\t\t\t  variant=\"light\"\n\t\t\t\t\tonClick={ this.props.showModal }>\n\t\t\t\t\tReport Symptoms\n\t\t\t\t</Button>\n      )\n    }\n    \n  }\n}\n\n\nexport default ReportSymptomsButton;\n\n","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\nimport { getPlacesOnMap } from '../../actions/placesVisitedActions.js';\n\n// components\nimport GoogleMap from './GoogleMap.js';\nimport PlaceSearchForm from './PlaceSearchForm.js';\nimport ReportCaseModal from '../modals/ReportCaseModal.js';\nimport { Row, Col, Card, Button, Spinner } from 'react-bootstrap';\nimport ReportSymptomsButton from '../common/ReportSymptomsButton.js';\nimport { Link } from 'react-router-dom';\n\n\nclass MapContainer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmapIsLoading: true,\n\t\t\tmapsLocation: {\n\t\t\t\tlat: 0,\n\t\t\t\tlng: 0\n\t\t\t},\n\t\t\tmapZoom: 13,\n\t\t\tshowModal: false\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setUsersLocation();\n\t\tthis.props.getPlacesOnMap();\n\t}\n\n\t// uses the google maps api to get the users current location \n\tsetUsersLocation = () => {\n\t\tif (navigator.geolocation) {\n\t\t\tlet location;\n\t\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\t\t\n\t\t\t\tlocation = {\n\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\tlng: position.coords.longitude\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ \n\t\t\t\t\tmapsLocation: location,\n\t\t\t\t\tmapIsLoading: false \n\t\t\t\t})\n\t\t\t});\t\n\t\t}\n\t}\n\n\tsetMapsLocation = (coordinates) => {\n\t\tthis.setState({ \n\t\t\tmapsLocation: coordinates,\n\t\t\tmapZoom: 18 \n\t\t});\n\t}\n\n\tshowModal = () => {\n\t\tthis.setState({ showModal: true });\n\t}\n\n\thideModal = () => {\n\t\tthis.setState({ showModal: false });\n\t}\n\n  render() {\n    return (\n\t\t\t<React.Fragment>\n\n\t\t\t\t{/* if the user is logged in and has not reported a case then this modal \n\t\t\t\t\t  will be available to report their case */}\n\t\t\t\t{this.state.showModal ? (\n\t\t\t\t\t<ReportCaseModal\n\t\t\t\t\t\tshowModal={ this.state.showModal }\n\t\t\t\t\t\thideModal={ this.hideModal } />\n\t\t\t\t) : (\n\t\t\t\t\tnull\n\t\t\t\t)}\n\n\t\t\t\t<Card>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t  <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<PlaceSearchForm \n\t\t\t\t\t\t\t\tsetMapsLocation={ this.setMapsLocation } />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\n\t\t\t\t\t\t\t{/* if the user is logged in show the butto that allows them to report their symptoms */}\n\t\t\t\t\t\t\t{this.props.isLoggedIn ? (\n\t\t\t\t\t\t\t\t<div className=\"d-flex d-flex flex-row-reverse\">\n\t\t\t\t\t\t\t\t\t<ReportSymptomsButton \n\t\t\t\t\t\t\t\t\t\tuserHasCase={ this.props.usersCase } \n\t\t\t\t\t\t\t\t\t\tshowModal={ this.showModal } />\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t// if the user isnt logged in they are shown a link to register\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<p className=\"text-center\">\n\t\t\t\t\t\t\t\t\tFeeling Symptoms? <br></br>\n\t\t\t\t\t\t\t\t\t<Link to=\"/register\">Sign up here</Link> to report your symptoms\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\n\t\t\t\t{this.state.mapIsLoading ? (\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<Spinner animation=\"border\" className=\"mt-4\" />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<GoogleMap \n\t\t\t\t\t\tmapIsLoading={ this.state.mapIsLoading }\n\t\t\t\t\t\tmapsLocation={ this.state.mapsLocation } \n\t\t\t\t\t\tplacesOnMap={ this.props.placesOnMap }\n\t\t\t\t\t\tmapZoom={ this.state.mapZoom }\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t</React.Fragment>\n    )\n\t}\n\t\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisLoggedIn: state.user.isLoggedIn,\n\t\tuserInfo: state.user.userInfo,\n\t\tusersCase: state.cases.usersCase,\n\t\tplacesOnMap: state.placesVisited.placesOnMap\n\t}\n}\n\nexport default connect(mapStateToProps, { getPlacesOnMap })(MapContainer);\n\n\n","import {\n    SET_PLACES_ON_MAP,\n    SET_USERS_PLACES_VISITED,\n    ADD_USERS_PLACE_VISITED,\n    DELETE_USERS_PLACE_VISITED\n} from '../constants/actionTypes.js';\n\nimport placesVisitedAPI from '../api/placesVisitedApi.js';\n\n\nexport const getPlacesOnMap = () => async (dispatch) => {\n    const response = await placesVisitedAPI.getPlacesOnMap();\n\n    if (response.status.code === 200) {\n        dispatch({\n            type: SET_PLACES_ON_MAP,\n            payload: response.data\n        });\n    }\n}\n\n\nexport const createUsersPlaceVisited = (placeVisitedInfo) => async (dispatch) => {\n    const response = await placesVisitedAPI.createUsersPlaceVisited(placeVisitedInfo);\n\n    // if the place visited was create successfully\n    if (response.status.code === 201) {\n        dispatch({\n            type: ADD_USERS_PLACE_VISITED,\n            payload: response.data\n        });\n    } \n\n    return response;\n}\n\n\nexport const deleteUsersPlaceVisited = (placeVisitedId) => async (dispatch) => {\n    const response = await placesVisitedAPI.deleteUsersPlaceVisited(placeVisitedId);\n\n    // if the place visited was deleted successfully\n    if (response.status.code === 204) {\n        dispatch({\n            type: DELETE_USERS_PLACE_VISITED,\n            payload: placeVisitedId\n        });\n    }    \n\n    return response;\n}","import React from 'react';\n\nimport { Accordion, Card, Button } from 'react-bootstrap';\n\n\nfunction CovidFaqs(props) {\n  return (\n\t\t<Accordion>\n\n\t\t\t<Card>\n\t\t\t\t<Card.Header>\n\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n\t\t\t\t\t\tWhat is a novel coronavirus?\n\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Accordion.Collapse eventKey=\"0\">\n      \t\t<Card.Body>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tA novel coronavirus is a new coronavirus that has not been previously identified.\n\t\t\t\t\t\t\tThe virus causing coronavirus disease 2019 (COVID-19), is not the same as the\n\t\t\t\t\t\t\tcoronaviruses that commonly circulate among humans and cause mild illness, like\n\t\t\t\t\t\t\tthe common cold.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tA diagnosis with coronavirus 229E, NL63, OC43, or HKU1 is not the same as a COVID-19\n\t\t\t\t\t\t\tdiagnosis. Patients with COVID-19 will be evaluated and cared for differently than\n\t\t\t\t\t\t\tpatients with common coronavirus diagnosis.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Card.Body>\n    \t\t</Accordion.Collapse>\n\t\t\t</Card>\n\n\t\t\t<Card>\n\t\t\t\t<Card.Header>\n\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n\t\t\t\t\t\tHow does the virus spread?\n\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Accordion.Collapse eventKey=\"1\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t  This virus was first detected in Wuhan City, Hubei Province, China. The first infections \n\t\t\t\t\t\t\twere linked to a live animal market, but the virus is now spreading from person-to-person. \n\t\t\t\t\t\t\tIt’s important to note that person-to-person spread can happen on a continuum. Some viruses \n\t\t\t\t\t\t\tare highly contagious (like measles), while other viruses are less so.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe virus that causes COVID-19 seems to be spreading easily and sustainably in the community \n\t\t\t\t\t\t\t(“community spread”) in some affected geographic areas.Community spread means people have \n\t\t\t\t\t\t\tbeen infected with the virus in an area, including some who are not sure how or where they became infected.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Accordion.Collapse>\n\t\t\t</Card>\n\n\t\t\t<Card>\n    \t\t<Card.Header>\n      \t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n\t\t\t\t\t\tWhat are they symptoms of COVID-19?\n      \t\t</Accordion.Toggle>\n    \t\t</Card.Header>\n    \t\t<Accordion.Collapse eventKey=\"2\">\n      \t\t<Card.Body>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tReported illnesses have ranged from mild symptoms to severe illness and death for confirmed \n\t\t\t\t\t\t\tcoronavirus disease 2019 (COVID-19) cases.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThese symptoms may appear <strong>2-14 days after exposure</strong> (based on the incubation\n\t\t\t\t\t\t  period of MERS-CoV viruses).\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Fever</li>\n\t\t\t\t\t\t\t<li>Cough</li>\n\t\t\t\t\t\t\t<li>Shortness of Breath</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</Card.Body>\n    \t\t</Accordion.Collapse>\n\n\t\t\t\t<Card.Footer className=\"text-center\">\n\t\t\t    <small> \n\t\t\t\t\t\t<span className=\"mb-2\">\n\t\t\t\t\t\t\tAll information is from the Centers for Disease Control and Prevention\n\t\t\t\t\t\t</span><br></br>\n\t\t\t\t    <a \n\t\t\t\t\t\t  href=\"https://www.cdc.gov/coronavirus/2019-ncov/faq.html#anchor_1584389201096\" \n\t\t\t\t\t\t  target=\"_blank\">\n\t\t\t\t\t    Learn More \n\t\t\t\t\t  </a>\n\t\t\t\t\t</small>\n\t\t\t\t</Card.Footer>\n  \t\t</Card>\n\n\t\t</Accordion>\n  )\n}\n\n\nexport default CovidFaqs;\n","import React from 'react';\n\n// redux\nimport { connect } from 'react-redux';\nimport { deleteUsersCase } from '../../actions/casesActions.js';\n\n// components\nimport { Modal, Button } from 'react-bootstrap';\n \n\nclass DeleteCaseModal extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\thandleDelete = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst response = await this.props.deleteUsersCase(this.props.userId);\n\t\t\n\t\tthis.props.hideModal();\n\t}\n\t\n\trender() {\n\t\tconst usersCase = this.props.usersCase;\n\n\t\treturn (\n\t\t\t<Modal \n\t\t\t\tshow={ this.props.showModal } \n\t\t\t\tonHide={ this.props.hideModal }>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Delete Your Reported Case</Modal.Title>\n\t\t\t\t</Modal.Header>\t\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAre you sure you would like to delete your case?\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Tested Positive: </strong> \n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Symptoms Date: </strong> { usersCase.symptoms_date } \n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Age: </strong> { usersCase.age } \n\t\t\t\t\t</p>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\t\tonClick={ this.handleDelete } >\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tvariant=\"light\"\n\t\t\t\t\t\tonClick={ this.props.hideModal }>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n}\n\n\nexport default connect(null, { deleteUsersCase })(DeleteCaseModal);","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\nimport { createUsersPlaceVisited } from '../../actions/placesVisitedActions.js';\n\n// components\nimport { Modal, Form } from 'react-bootstrap';\nimport DatePicker from 'react-date-picker';\nimport { GoogleComponent } from 'react-google-location'\nimport FormButton from '../common/FormButton.js';\nimport { MDBInput, MDBListGroup, MDBListGroupItem } from \"mdbreact\"\n\n\nclass ReportPlaceVisitedModal extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tplace: '',\n\t\t\tgooglePlaceId: '',\n\t\t\tdate_visited: new Date(),\n\t\t\tisSearchingForPlace: false,\n\t\t\tsearchPlacePredictions: [],\n\t\t\tisLoading: false,\n\t\t\tformErrorMessages: []\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value })\n\t}\n\n\thandleDateChange = (date) => {\n\t\tthis.setState({\n\t\t\tdate_visited: date\n\t\t});\n\t}\n\n\t// handle change for the location autocomplete input\n\thandlePlaceChange = (e) => {\n\t\tthis.setState({ place: e.target.value });\n\n\t\tif (this.state.place.length < 2) {\n\t\t\tthis.setState({ isSearchingForPlace: false })\n\t\t} else {\n\t\t\tthis.setState({ isSearchingForPlace: true })\n\t\t}\n\n\t\tthis.getAutocompleteResults();\n\t}\n\n\tgetAutocompleteResults = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:8000/api/v1/maps/autocomplete/places?search_input=' + this.state.place\n\t\t\t);\n\t\t\tconst parsedResponse = await response.json();\n\t\t\tconst googleApiResponse = parsedResponse.data;\n\n\t\t\tif (googleApiResponse.status === 'OK') {\n\t\t\t\tthis.setState({ searchPlacePredictions: googleApiResponse.predictions });\n\t\t\t} \n\n\t\t}\tcatch (error) {\n\t\t\t// TODO - handle this error\n\t\t\tconsole.log('error occurred while searching for places:', error);\n\t\t}\n\t}\n\n\thandleSearchPredictionClick = (place) => {\n\t\tconst placeDescription = place.description;\n\t\tconst googlePlaceId = place.place_id;\n\n\t\tthis.setState({ \n\t\t\tisSearchingForPlace: false,\n\t\t\tplace: placeDescription,\n\t\t\tgooglePlaceId: googlePlaceId\n\t\t});\n\t}\n\n\thandleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tawait this.setState({\n\t\t\tformErrorMessages: [],\n\t\t\tisLoading: true\n\t\t});\n\n\t\t// if the user selected a place correctly\n\t\tlet placesLocation;\n\t\tif (this.state.googlePlaceId !== '') {\n\t\t\tplacesLocation = await this.getPlacesLocation();\n\n\t\t// otherwise an error message is show on the form\n\t\t} else {\n\t\t\tconst newErrorMessage = 'The place you selected is not valid';\n\t\t\tthis.setState({\n\t\t\t\tformErrorMessages: [...this.state.formErrorMessages, newErrorMessage],\n\t\t\t\tisLoading: false\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// address is formatted as a object by the google api so the request \n\t\t// body needs to be reformatted\n\t\tconst placesName = this.state.place.split(',')[0];\n\t\tconst requestBody = {\n\t\t\tname: placesName,\n\t\t\taddress: this.state.place,\n\t\t\tlatitude: placesLocation.lat,\n\t\t\tlongitude: placesLocation.lng,\n\t\t\tdate_visited: this.state.date_visited,\n\t\t\tgoogle_place_id: this.state.googlePlaceId\n\t\t}\n\n\t\t// makes api call to report the place the user visited\n\t\tconst response = await this.props.createUsersPlaceVisited(requestBody);\n\n\t\tthis.setState({ isLoading: false });\n\n\t\t// if the place visited was created then the modal is hidden\n\t\tif (response.status.code === 201) {\n\t\t\tthis.clearState();\n\t\t\tthis.props.hideModal();\n\t\t}\n\t}\n\n\t// get the latitude and longitude of the place the user visited\n\tgetPlacesLocation = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:8000/api/v1/maps/places/location?google_place_id=' + this.state.googlePlaceId\n\t\t\t);\n\t\t\tconst parsedResponse = await response.json();\n\t\t\treturn parsedResponse.data.result.geometry.location;\n\n\t\t} catch (error) {\n\t\t\tconsole.log('error:', error);\n\t\t}\n\t}\n\n\tclearState = () => {\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\tplace: '',\n\t\t\tgooglePlaceId: '',\n\t\t\tdate_visited: new Date(),\n\t\t});\n\t}\n\n  render() {\n\t\treturn (\n\t\t\t<Modal \n\t\t\t\tshow={ this.props.showModal } \n\t\t\t\tonHide={ this.props.hideModal }>\n\t\t  \t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Report Place Visited</Modal.Title>\n\t\t\t\t</Modal.Header>\t\t\n\t\t\t\t<Modal.Body>\n\n\t\t\t\t\t{/* form error messages */}\n\t\t\t\t\t{this.state.formErrorMessages.map((message, i) => {\n          \treturn (\n            \t<div key={ i }>\n\t\t\t\t\t\t\t\t<small className=\"text-danger\">{ message }</small>\n\t\t\t\t\t\t\t</div>\n            )\n          })}\t\n\t\t\t\t\t\n\t\t\t\t<Form\n\t\t\t\t\tclassName=\"py-3 text-center\"\n\t\t\t\t\tonSubmit={ this.handleSubmit } >\n\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Label>What is the address of this place?</Form.Label>\n\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"place\"\n\t\t\t\t\t\t\tplaceholder=\"Start typing...\" \n\t\t\t\t\t\t\tvalue={ this.state.place }\n\t\t\t\t\t\t\tonChange={ this.handlePlaceChange }\n\t\t\t\t\t\t\t// onBlur={ () => this.setState({ isSearchingForPlace: false }) } \n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/* if the user is currently searching for the place they visited then the search \n\t\t\t\t\t\t\t    predictions box will appear for them to select a place */}\n\t\t\t\t\t\t\t{this.state.isSearchingForPlace ? (\n\t\t\t\t\t\t\t\t<MDBListGroup className=\"dropdown-search-box\">\n\t\t\t\t\t\t\t\t\t<MDBListGroupItem>\n\t\t\t\t\t\t\t\t\t\t<strong>Select a place below</strong>\n\t\t\t\t\t\t\t\t\t</MDBListGroupItem>\n              \t\t{this.state.searchPlacePredictions.map((place, i) => {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<MDBListGroupItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={ i } \n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"dropdown-search-item\"\n\t\t\t\t\t\t\t\t\t\t\t\tdescription={ place.description }\n\t\t\t\t\t\t\t\t\t\t\t\tplace_id={ place.place_id }\n\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"value\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => this.handleSearchPredictionClick(place) }>\n\t\t\t\t\t\t\t\t\t\t\t\t{ place.description }\n\t\t\t\t\t\t\t\t\t\t\t</MDBListGroupItem>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n            \t</MDBListGroup>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Label>When did you visit this place?</Form.Label>\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tclassName=\"w-100\"\n\t\t\t\t\t\t\tvalue={ this.state.date_visited }\n\t\t\t\t\t\t\tonChange={ this.handleDateChange } />\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<FormButton \n\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\ttext=\"Report\"\n\t\t\t\t\t\tisLoading={ this.state.isLoading } />\n\t\t\t\t</Form>\n\n\t\t\t\t</Modal.Body>\n    \t</Modal>\n\t\t)\n\t}\n}\n\n\nexport default connect(null, { createUsersPlaceVisited })(ReportPlaceVisitedModal);\n\n","import React from 'react';\n\n// redux\nimport { connect } from 'react-redux';\nimport { deleteUsersPlaceVisited } from '../../actions/placesVisitedActions.js';\n\n// components\nimport { Modal, Button } from 'react-bootstrap';\n\n \n\nclass DeletePlaceVisitedModal extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\thandleDelete = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst response = await this.props.deleteUsersPlaceVisited(this.props.placeVisited.id);\n\n\t\tthis.props.hideModal();\n\t}\n\t\n\trender() {\n\t\tconst placeVisited = this.props.placeVisited;\n\n\t\t// so the modal is not returned if the user is not trying to delete a place\n\t\t// they have visited\n\t\tif (!placeVisited.name) {\n\t\t\treturn (\n\t\t\t\tnull\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<Modal \n\t\t\t\tshow={ this.props.showModal } \n\t\t\t\tonHide={ this.props.hideModal }>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Delete Place Visited</Modal.Title>\n\t\t\t\t</Modal.Header>\t\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAre you sure you would like to delete this place you visited?\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Name: </strong> { placeVisited.name || '' }\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Address: </strong> { placeVisited.address || '' }\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Date Visited: </strong> { placeVisited.date_visited || '' }\n\t\t\t\t\t</p>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\t\tonClick={ this.handleDelete } >\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tvariant=\"light\"\n\t\t\t\t\t\tonClick={ this.props.hideModal }>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n}\n\n\nexport default connect(null, { deleteUsersPlaceVisited })(DeletePlaceVisitedModal);\n\n\n","import React from 'react';\n\nimport { Card, Button } from 'react-bootstrap';\n\n\nfunction PlaceVisitedCard(props) {\n\tconst placeVisited = props.placeVisited;\n\tconst dateVisited = new Date(placeVisited.date_visited);\n\n  return (\n\t\t<Card className=\"mt-4\">\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>{ placeVisited.name }</Card.Title>\n\t\t\t\t<p>{ placeVisited.address }</p>\n\t\t\t\t<p>\n\t\t\t\t\tVisited on <strong>{ dateVisited.toDateString() }</strong>\n\t\t\t\t</p>\n\t\t\t\t<Button \n\t\t\t\t\tvariant=\"danger\" \n          onClick={ () => props.deleteButtonOnClick(placeVisited) }>\n          Delete    \n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t</Card>\n  )\n}\n\n\nexport default PlaceVisitedCard;\n\n","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\n\n// components\nimport { Row, Col, Button } from 'react-bootstrap';\nimport ReportPlaceVisitedModal from '../modals/ReportPlaceVisitedModal.js';\nimport DeletePlaceVisitedModal from '../modals/DeletePlaceVisitedModal.js';\nimport PlaceVisitedCard from '../common/PlaceVisitedCard.js';\n\n\nclass MyPlacesVisited extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tshowReportPlaceVisitedModal: false,\n\t\t\tshowDeletePlaceVisitedModal: false,\n\t\t\tplaceVisitedToDelete: {}\n\t\t}\n\t}\n\n\tshowReportPlaceVisitedModal = () => {\n\t\tthis.setState({ showReportPlaceVisitedModal: true });\n\t} \n\n\thideReportPlaceVisitedModal = () => {\n\t\tthis.setState({ showReportPlaceVisitedModal: false });\n\t} \n\n\tshowDeletePlaceVisitedModal = (placeVisitedToDelete) => {\n\t\tthis.setState({\n\t\t\tshowDeletePlaceVisitedModal: true,\n\t\t\tplaceVisitedToDelete: placeVisitedToDelete\n\t\t});\n\t}\n\n\thideDeletePlaceVisitedModal = () => {\n\t\tthis.setState({\n\t\t\tshowDeletePlaceVisitedModal: false,\n\t\t\tplaceVisitedToDelete: {}\n\t\t});\n\t}\n\n  render() {\n  \treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t{/* Modal for reporting a place the user has visited */}\n\t\t\t\t<ReportPlaceVisitedModal \n\t\t\t\t\tshowModal={ this.state.showReportPlaceVisitedModal }\n\t\t\t\t\thideModal={ this.hideReportPlaceVisitedModal }\n\t\t\t\t\t/>\n\n\t\t\t\t{/* Modal for deleting a place the user has visited */}\n\t\t\t\t<DeletePlaceVisitedModal \n\t\t\t\t\tshowModal={ this.state.showDeletePlaceVisitedModal }\n\t\t\t\t\thideModal={ this.hideDeletePlaceVisitedModal }\n\t\t\t\t\tplaceVisited={ this.state.placeVisitedToDelete }\n\t\t\t\t/>\n\n  \t\t\t<div className=\"mt-4\">  \n\t\t\t\t\t<h5>Places Visited</h5>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPlease report all of the places you have visited within the last 7 of when you started \n\t\t\t\t\t\tto show symptoms\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tvariant=\"light\" \n\t\t\t\t\t\tonClick={ this.showReportPlaceVisitedModal }>\n\t\t\t\t\t\tReport Place Visited\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Row className=\"py-4\">\n\t\t\t\t\t\t{/* Shows all of the places the user has visited */}\n\t\t\t\t\t\t{this.props.usersPlacesVisited.map((placeVisited, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Col key={ i } md={ 6 } sm={ 12 }>\n\t\t\t\t\t\t\t\t\t<PlaceVisitedCard \n\t\t\t\t\t\t\t\t\t\tplaceVisited={ placeVisited }\n\t\t\t\t\t\t\t\t\t\tdeleteButtonOnClick={ this.showDeletePlaceVisitedModal } />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Row>\n\n    \t\t</div>\n\t\t\t</React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tusersPlacesVisited: state.placesVisited.usersPlacesVisited\n\t}\n}\n\nexport default connect(mapStateToProps, {})(MyPlacesVisited);\n\n\n","import React from 'react';\n\n// redux \nimport { connect } from 'react-redux';\n\n// components\nimport AuthCheck from '../common/AuthCheck.js';\nimport CovidFaqs from '../common/CovidFaqs.js';\nimport { Container, Card, Row, Col, Button } from 'react-bootstrap';\nimport ReportCaseModal from '../modals/ReportCaseModal.js';\nimport DeleteCaseModal from '../modals/DeleteCaseModal.js';\nimport MyPlacesVisited from './MyPlacesVisited.js';\n\n\nclass MyCase extends React.Component {\n\n  constructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tshowReportCaseModal: false,\n\t\t\tshowDeleteCaseModal: false\n\t\t}\n\t}\n\t\n\tshowReportCaseModal = () => {\n\t\tthis.setState({ showReportCaseModal: true });\n\t}\n\n\thideReportCaseModal = () => {\n\t\tthis.setState({ showReportCaseModal: false });\n\t}\n\n\tshowDeleteCaseModal = () => {\n\t\tthis.setState({ showDeleteCaseModal: true });\n\t}\n\n\thideDeleteCaseModal = () => {\n\t\tthis.setState({ showDeleteCaseModal: false });\n\t}\n\n  render() {\n\t\tconst { isLoggedIn, userInfo, usersCase } = this.props;\n\t\tconst symptomsDate = new Date(usersCase.symptoms_date);\n\t\tconsole.log('has tested:', usersCase.has_tested);\n\n\t\t// determines if the user has reported a case already\n\t\tconst userHasCase = usersCase.zip_code;\n\n    return (\n\t\t\t<Container>\n\n\t\t\t\t{/* Authenticates the user is logged in and has confirmed their phone number */}\n      \t<AuthCheck \n        \tisLoggedIn={ isLoggedIn } \n      \t\tphoneNumberConfirmed={ userInfo.phone_number_confirmed } />\n\n\t\t\t\t{/* if the user has a case reported they will not be able to open the ReportCaseModal\n\t\t\t\t    but they will be able to open the DeleteCaseModal */}\n\t\t\t\t{userHasCase ? (\n\t\t\t\t\t<DeleteCaseModal \n\t\t\t\t\t\tshowModal={ this.state.showDeleteCaseModal }\n\t\t\t\t\t\thideModal={ this.hideDeleteCaseModal }\n\t\t\t\t\t\tusersCase={ usersCase } \n\t\t\t\t\t\tuserId={ userInfo.id } />\n\n\t\t\t\t// if the user has not reported a case they will be able to open the ReportCaseModal\n\t\t\t\t) : (\n\t\t\t\t\t<ReportCaseModal \n\t\t\t\t\t\tshowModal={ this.state.showReportCaseModal }\n\t\t\t\t\t\thideModal={ this.hideReportCaseModal } />\n\t\t\t\t)}\n\t\t\t\t\n\t\t\t\t<Row className=\"mt-4\">\n\n\t\t\t\t\t{/* Faqs about COVID-19 */}\n\t\t\t\t\t<Col md={ 4 } sm={ 12 }>\n\t\t\t\t\t\t<CovidFaqs />\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col md={ 8 } sm={ 12 }>\n\t\t\t\t\t\t<Card bg=\"light\">\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Card.Title>Your Reported Case</Card.Title>\n\n\t\t\t\t\t\t\t\t{/* if the user has reported a case */}\n\t\t\t\t\t\t\t\t{userHasCase ? (\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col md={ 12 } sm={ 12 }>\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-1\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>Tested Positive: </strong> \n\n\t\t\t\t\t\t\t\t\t\t\t{usersCase.has_tested ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Yes</span>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<span>No</span>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-1\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>Symptoms Date: </strong> { symptomsDate.toDateString() }\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-2\">\t\n\t\t\t\t\t\t\t\t\t\t\t<strong>Age: </strong> { usersCase.age }\n\t\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t\t{/* the notes field is optional so it needs to check if it exists */}\n\t\t\t\t\t\t\t\t\t\t{usersCase.notes ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">\t\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Additional Information: </strong><br></br>\n\t\t\t\t\t\t\t\t\t\t\t\t{ usersCase.notes }\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t{/* Edit and delete buttons */}\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ this.showDeleteCaseModal }>\n\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t\t\t// if the user has not reported a case yet\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t<p className=\"mb-1\"><strong>Have you:</strong></p>\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">Been experiencing symptoms of Coronavirus/Covid-19?</p>\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\"><strong>or</strong></p>\n\t\t\t\t\t\t\t\t\t<p>Tested positive for Coronavirus/Covid-19?</p>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t  \t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\t\t\t\t\tonClick={ this.showReportCaseModal }>\n\t\t\t\t\t\t\t\t\t\tReport Symptoms\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t{/* if the user has a case reported then the component that allows the user\n\t\t\t\t\t\t    to add places they have visited is shown */}\n\t\t\t\t\t\t{userHasCase ? (\n\t\t\t\t\t\t\t<MyPlacesVisited />\t\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t)}\t\t\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t</Col>\t\n\t\t\t\t</Row>\t\n\t\t\t</Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        userInfo: state.user.userInfo,\n        usersCase: state.cases.usersCase\n    }\n}\n\nexport default connect(mapStateToProps, {})(MyCase);","import React from 'react';\n\n// libraries\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from './store';\n\n// custom components\nimport NavigationBar from './components/common/NavigationBar.js';\nimport Register from './components/authentication/Register.js';\nimport Login from './components/authentication/Login.js';\nimport ConfirmPhoneNumber from './components/authentication/ConfirmPhoneNumber.js';\nimport MapContainer from './components/maps/MapContainer.js';\nimport MyCase from './components/user/MyCase.js';\n\n// css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Provider store={ store }>\n        <NavigationBar />\n        <BrowserRouter>\n          <Switch>\n\n            {/* Registration */}\n            <Route \n              path=\"/register\"\n              component={ Register } />\n\n            {/* Login */}\n            <Route \n              path=\"/login\" \n              component={ Login } />\n\n            {/* Confirm Phone Number */}\n            <Route \n              path=\"/confirm-number\"\n              component={ ConfirmPhoneNumber } />\n\n            {/* Map */}\n            <Route \n              path=\"/map\"  \n              component={ MapContainer } />\n\n            {/* Show Users Case */}\n            <Route\n              path=\"/my-case\"\n              component={ MyCase } />\n\n            {/* Home */}\n            <Route path=\"/\">\n              <h1>Home</h1>\n            </Route>\n\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}